if (isBuildModule.toBoolean()) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}

apply from: "../config_gradle/common.gradle"

android {
    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //阿里路由框架配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        multiDexEnabled true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }
    //修复编译错误
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    //签名配置
    signingConfigs {
        module_common {
            storeFile file("../keystore/module_test.jks")
            keyAlias "module_test_alias"
            storePassword "123456"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    //编译类型
    buildTypes {
        debug {
            //是否打开混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //debug 签名配置
            signingConfig signingConfigs.module_common
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //release 签名配置
            signingConfig signingConfigs.module_common
        }
    }
    flavorDimensions "env"
    productFlavors {
        m_debug {
        }
        dev {
        }
        prod {
        }
    }
}


